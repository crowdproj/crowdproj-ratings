openapi: 3.0.4
info:
  title: Ratings
  description: |
    Crowd project - Ratings
  contact:
    email: shvetson@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://localhost/api/v1
    description: App Server
tags:
  - name: rating
    description: Ratings
paths:
  /ratings/create:
    post:
      tags:
        - rating
      summary: Create rating
      operationId: ratingCreate
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingCreateRequest'
        required: true
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingCreateResponse'
  /ratings/read:
    post:
      tags:
        - rating
      summary: Read rating
      operationId: ratingRead
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingReadResponse'
  /ratings/update:
    post:
      tags:
        - rating
      summary: Update rating
      operationId: ratingUpdate
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingUpdateResponse'
  /ratings/delete:
    post:
      tags:
        - rating
      summary: Delete rating
      operationId: ratingDelete
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingDeleteResponse'
  /ratings/search:
    post:
      tags:
        - rating
      summary: Search rating
      operationId: ratingSearch
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSearchResponse'

components:
  schemas:

    IRequest:
      type: object
      description: An interface for all requests
      properties:
        requestType:
          type: string
          description: A discriminator to determinate the request type
          example: create
        requestId:
          type: string
          description: A request ID for debug
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/RatingCreateRequest'
          read: '#/components/schemas/RatingReadRequest'
          update: '#/components/schemas/RatingUpdateRequest'
          delete: '#/components/schemas/RatingDeleteRequest'
          search: '#/components/schemas/RatingSearchRequest'

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      enum:
        - success
        - error

    IResponse:
      type: object
      description: An interface for all responses
      properties:
        responseType:
          type: string
          description: A discriminator to determinate the response type
          example: create
        requestId:
          type: string
          description: A response ID for debug
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/RatingCreateResponse'
          read:   '#/components/schemas/RatingReadResponse'
          update: '#/components/schemas/RatingUpdateResponse'
          delete: '#/components/schemas/RatingDeleteResponse'
          search: '#/components/schemas/RatingSearchResponse'
          init: '#/components/schemas/RatingInitResponse'

    ObjectId:
      type: string
      description: A rating object ID
      example: "12"

    RatingId:
      type: string
      description: A rating ID
      example: "34"

    OwnerId:
      type: string
      description: An owner ID
      example: "234"

    TypeId:
      type: string
      description: A score type ID
      example: "112"

    RatingLock:
      type: string
      description: An optimistic lock version

    BaseRating:
      type: object
      description: The object describes properties which are same to create and update
      properties:
        typeId:
          $ref: '#/components/schemas/TypeId'
        objectId:
          $ref: '#/components/schemas/ObjectId'
        objectType:
          $ref: '#/components/schemas/ObjectType'
        score:
          type: string
          description: A rating score
          example: "4.5"
        voteCount:
          type: string
          description: A votes count
          example: "123"
        createdAt:
          type: string
          format: date-time
#          format: 2023-01-11T12:22:53Z
          description: A rating date and time created
        updatedAt:
          type: string
#          format: date-time
          format: 2023-03-11T12:22:53Z
          description: A rating date and time updated
        ownerId:
          $ref: '#/components/schemas/OwnerId'

    ObjectType:
      type: string
      description: A rating object type
      example: 'ad'
      enum:
        - ad
        - comment
        - product

    RatingInitResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'

    RatingCreateObject:
      allOf:
        - $ref: '#/components/schemas/BaseRating'

    RatingCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/RatingRequestDebug'
        - type: object
          properties:
            rating:
              $ref: '#/components/schemas/RatingCreateObject'

    RatingReadObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/RatingId'

    RatingReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/RatingRequestDebug'
        - type: object
          properties:
            rating:
              $ref: '#/components/schemas/RatingReadObject'

    RatingUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseRating'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/RatingId'

    RatingUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/RatingRequestDebug'
        - type: object
          properties:
            rating:
              $ref: '#/components/schemas/RatingUpdateObject'

    RatingDeleteObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/RatingId'

    RatingDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/RatingRequestDebug'
        - type: object
          properties:
            rating:
              $ref: '#/components/schemas/RatingDeleteObject'

    RatingSearchFilter:
      type: object
      description: A list of filters to search
      properties:
        searchString:
          type: string
          description: A search string that will be searched for in ratings

    RatingSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/RatingRequestDebug'
        - type: object
          properties:
            ratingFilter:
              $ref: '#/components/schemas/RatingSearchFilter'

    RatingResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseRating'
        - type: object
          description: An object that is returned in the response
          properties:
            id:
              $ref: '#/components/schemas/RatingId'
            lock:
              $ref: '#/components/schemas/RatingLock'
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/RatingPermissions'

    RatingPermissions:
      type: string
      description: A list of available operations on ratings
      enum:
        - read
        - update
        - delete
        - makeVisiblePublic
        - makeVisibleOwn
        - makeVisibleGroup

    RatingResponseSingle:
      allOf:
        - type: object
          description: A response with one rating
          properties:
            rating:
              $ref: '#/components/schemas/RatingResponseObject'

    RatingResponseMulti:
      allOf:
        - type: object
          description: A ratings list
          properties:
            ratings:
              type: array
              items:
                $ref: '#/components/schemas/RatingResponseObject'

    RatingCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/RatingResponseSingle'

    RatingReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/RatingResponseSingle'

    RatingUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/RatingResponseSingle'

    RatingDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/RatingResponseSingle'

    RatingSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/RatingResponseMulti'

    # STUBS ======================
    RatingRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    RatingRequestDebugStubs:
      type: string
      description: A list all stubs
      enum:
        - success
        - notFound
        - badId
        - badObjectId
        - cannotDelete
        - badSearchString

    RatingDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/RatingRequestDebugMode'
        stub:
          $ref: '#/components/schemas/RatingRequestDebugStubs'

    RatingRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/RatingDebug'